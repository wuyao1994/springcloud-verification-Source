#version: '3'
# to use memory limit feature in docker-compose, should downgrade version to '2'
version: '2'
services:
  kafka:
    image: wurstmeister/kafka:0.11.0.2
    ports:
     - "9092:9092"
    environment:
     - KAFKA_ADVERTISED_PORT=9092
     - KAFKA_ZOOKEEPER_CONNECT=$ZOOKEEPER_IP:2181
     - KAFKA_ADVERTISED_HOST_NAME=zookeeper
    depends_on:
     - zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
     - "2181:2181"
  config-service:
    mem_limit: 1280M
    image: springcloud-verification_config-service
    entrypoint: java -jar /app.jar
    environment:
     - server.port=8080
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
     - spring.cloud.stream.kafka.binder.brokers=kafka:9092
     - spring.cloud.stream.kafka.binder.zkNodes=zookeeper:2181
    ports:
     - "8080:8080"
    restart: always
  discovery-service-1:
    mem_limit: 1280M
    image: springcloud-verification_discovery-service
    entrypoint: java -jar /app.jar
    ports:
     - "8081:8081"
    environment:
     - server.port=$EUREKA_SERVER_PORT1
     - spring.profiles.active=peer1
     - eurekaClientServiceUrlDefaultZonePeer1=http://eurekapeer2:$EUREKA_SERVER_PORT2/eureka
    extra_hosts:
      eurekapeer2: $EUREKA_SERVER_IP
    restart: always
  discovery-service-2:
    mem_limit: 1280M
    image: springcloud-verification_discovery-service
    entrypoint: java -jar /app.jar
    ports:
     - "8082:8082"
    environment:
     - server.port=$EUREKA_SERVER_PORT2
     - spring.profiles.active=peer2
     - eurekaClientServiceUrlDefaultZonePeer2=http://eurekapeer1:$EUREKA_SERVER_PORT1/eureka
    extra_hosts:
      eurekapeer1: $EUREKA_SERVER_IP
    restart: always
  order-service-1:
    mem_limit: 1280M
    image: springcloud-verification_order-service
    entrypoint: java -jar /app.jar
    ports:
     - "8083:8083"
    environment:
     - server.port=8083
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always
  order-service-2:
    mem_limit: 1280M
    image: springcloud-verification_order-service
    entrypoint: java -jar /app.jar
    ports:
     - "8084:8084"
    environment:
     - server.port=8084
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always
  user-service:
    mem_limit: 1280M
    image: springcloud-verification_user-service
    entrypoint: java -jar /app.jar
    ports:
     - "8085:8085"
    environment:
     - server.port=8085
     - eurekaClientServiceUrlDefaultZone=http://eurekapeer1:$EUREKA_SERVER_PORT1/eureka,http://eurekapeer2:$EUREKA_SERVER_PORT2/eureka,
     - spring.cloud.stream.kafka.binder.brokers=kafka:9092
     - spring.cloud.stream.kafka.binder.zkNodes=zookeeper:2181
    extra_hosts:
      eurekapeer1: $EUREKA_SERVER_IP
      eurekapeer2: $EUREKA_SERVER_IP
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always
  price-service:
    mem_limit: 1280M
    image: springcloud-verification_price-service
    entrypoint: java -jar /app.jar
    ports:
     - "8086:8086"
    environment:
     - server.port=8086
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always
  inventory-service:
    mem_limit: 1280M
    image: springcloud-verification_inventory-service
    entrypoint: java -jar /app.jar
    ports:
     - "8087:8087" 
    environment:
     - server.port=8087
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always
  catalog-service:
    mem_limit: 1280M
    image: springcloud-verification_catalog-service
    entrypoint: java -jar /app.jar
    ports:
     - "8088:8088"
    environment:
     - server.port=8088
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always
  hystrix-dashboard-service:
    mem_limit: 1280M
    image: springcloud-verification_hystrix-dashboard-service
    entrypoint: java -jar /app.jar
    ports:
     - "8089:8089"
    environment:
     - server.port=8089
     - eurekaClientServiceUrlDefaultZone=http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT1/eureka,http://$EUREKA_SERVER_IP:$EUREKA_SERVER_PORT2/eureka,
    links:
     - discovery-service-1
     - discovery-service-2
    depends_on:
     - discovery-service-1
     - discovery-service-2
    restart: always